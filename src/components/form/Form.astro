---
import MiniPreviews, { type MiniPreview } from "./MiniPreviews.astro";

interface Props {
  svgId: string;
}
const { svgId } = Astro.props;
const prevs: MiniPreview[] = [
  { id: "calli-line", value: "line", label: "Calligraphy Line", checked: true, gridType: "line" },
  { id: "calli-area", value: "area", label: "Calligraphy Area", checked: false, gridType: "area" },
  { id: "dot", value: "dot", label: "Dot Grid", checked: false, gridType: "dot" },
  { id: "graph", value: "graph", label: "Graph", checked: false, gridType: "graph" },
];

const name = "grid-type";

const colorOptions = [
  {
    label: "non-photo blue",
    value: "#A4DDED",
  },
  {
    label: "30% Black",
    value: "#b3b3b3",
  },
  {
    label: "50% Black",
    value: "#808080",
  },
  {
    label: "Black",
    value: "#000000",
  },
  {
    label: "Custom (Enter Hexcode)",
    value: "#ff0000",
    isTextInput: true,
  },
];
---

<form data-form-container>
  <fieldset>
    <legend>Grid Type</legend>
    <MiniPreviews
      previews={prevs}
      radioName={name}
    />
  </fieldset>
  <fieldset class="view-switch">
    <legend>How many options should be displayed?</legend>
    <input
      type="radio"
      name="config-type"
      value="minimal"
      checked
      id="config-type-minimal"
      class="visually-hidden"
    />
    <label for="config-type-minimal">Minimal</label>
    <input
      type="radio"
      name="config-type"
      value="balanced"
      id="config-type-balanced"
      class="visually-hidden"
    />
    <label for="config-type-balanced">Balanced</label>
    <input
      type="radio"
      name="config-type"
      value="maximal"
      id="config-type-maximal"
      class="visually-hidden"
    />
    <label for="config-type-maximal">Maximal</label>
  </fieldset>
  <div data-field-container></div>
</form>
